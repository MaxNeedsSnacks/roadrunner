import net.fabricmc.loom.task.RemapJarTask

plugins {
    id 'dev.architectury.loom' version '0.7.2-SNAPSHOT'
    id 'maven-publish'
}

loom {
    silentMojangMappingsLicense()

    mixinConfigs = [
            "lithium.mixins.json"
    ]
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

group = project.maven_group
version = project.mod_version
archivesBaseName = "${project.name}-mc${project.minecraft_version}"

def build_release = System.getenv("BUILD_RELEASE") == "true"
def build_id = System.getenv("BUILD_ID")

if (!build_release) {
    version += "-SNAPSHOT"
}

if (build_id != null) {
    version += "+build.${build_id}"
}

sourceSets {
    api {
        java {
            compileClasspath += main.compileClasspath
        }
    }

    main {
        java {
            compileClasspath += api.output
            runtimeClasspath += api.output
        }
    }
}

repositories {
    maven {
        url "https://www.cursemaven.com"
    }
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    forge "net.minecraftforge:forge:${project.minecraft_version}-${project.forge_version}"

    // these were both added to debug a weird crash
    // with thrashers and ai.nearby_entity_tracking
    modImplementation "curse.maven:abnormals-core-382216:3218058"
    modImplementation "curse.maven:upgrade-aquatic-326895:3171113"
}


processResources {
    // define properties that can be used during resource processing
    inputs.property "version", project.version

    // this will replace the property "${version}" in your mods.toml
    // with the version you've defined in your gradle.properties
    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"

    // The Minecraft launcher currently installs Java 8 for users, so your mod probably wants to target Java 8 too
    // JDK 9 introduced a new way of specifying this that will make sure no newer classes or methods are used.
    // We'll use that if it's available, but otherwise we'll use the older option.
    def targetVersion = 8
    if (JavaVersion.current().isJava9Compatible()) {
        it.options.release = targetVersion
    }
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }

    // add some additional metadata to the jar manifest
    manifest {
        attributes([
                "Specification-Title"     : "lithium",
                "Specification-Vendor"    : "CaffeineMC",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : version,
                "Implementation-Vendor"   : "CaffeineMC",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Include the license in all JAR outputs
tasks.withType(Jar) {
    from "LICENSE.txt"
    from sourceSets.api.output
}

task apiJar(type: Jar) {
    classifier "api-dev"

    from sourceSets.api.output
}

task remapApiJar(type: RemapJarTask, dependsOn: apiJar) {
    classifier "api"

    input = apiJar.archiveFile.get().asFile
    addNestedDependencies = false
}

build.dependsOn remapApiJar

// Used to temporarily add mods to the workspace for debugging
def customGradle = rootProject.file('custom.gradle');
if (customGradle.exists()) {
    apply from: customGradle;
}
